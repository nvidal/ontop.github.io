(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{241:function(t,e,n){"use strict";n.r(e);var o=n(0),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"setting-up-an-ontop-sparql-endpoint-with-docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-an-ontop-sparql-endpoint-with-docker"}},[t._v("#")]),t._v(" Setting up an Ontop SPARQL endpoint with Docker")]),t._v(" "),n("h2",{attrs:{id:"how-to-use-this-image"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-this-image"}},[t._v("#")]),t._v(" How to use this image")]),t._v(" "),n("p",[t._v("The Docker image "),n("a",{attrs:{href:"https://hub.docker.com/r/ontop/ontop-endpoint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ontop/ontop-endpoint"),n("OutboundLink")],1),t._v(" is for fast setting up an Ontop SPARQL endpoint.\nOne can either use this image directly, or create a dedicated image based on this image.")]),t._v(" "),n("p",[t._v("The required files in this tutorial are:")]),t._v(" "),n("ol",[n("li",[t._v("Download "),n("a",{attrs:{href:"input/university-complete.ttl"}},[t._v("this OWL ontology file")]),t._v(".")]),t._v(" "),n("li",[t._v("Download "),n("a",{attrs:{href:"input/university-complete.obda"}},[t._v("this mapping file")]),t._v(".")]),t._v(" "),n("li",[t._v("Download "),n("a",{attrs:{href:"input/university-complete.docker.properties"}},[t._v("this properties file")]),t._v(".")])]),t._v(" "),n("p",[t._v("In addition, we need the "),n("a",{attrs:{href:"../h2.zip"}},[t._v("h2 database")]),t._v(" as usual. Assume the h2 database is already running.")]),t._v(" "),n("p",[n("strong",[t._v("NB")]),t._v(": Linux users have to modify the property "),n("code",[t._v("jdbc.url")]),t._v(" in "),n("a",{attrs:{href:"input/university-complete.docker.properties"}},[n("code",[t._v("input/university-complete.docker.properties")])]),t._v(". Replace "),n("code",[t._v("host.docker.internal")]),t._v(" with the IP address of your machine.")]),t._v(" "),n("h3",{attrs:{id:"use-ontop-ontop-endpoint-directly"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#use-ontop-ontop-endpoint-directly"}},[t._v("#")]),t._v(" Use "),n("code",[t._v("ontop/ontop-endpoint")]),t._v(" directly")]),t._v(" "),n("p",[t._v("We can start an Ontop SPARQL endpoint by using the "),n("code",[t._v("ontop/ontop-endpoint")]),t._v(" image directly:")]),t._v(" "),n("h4",{attrs:{id:"linux-mac"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux-mac"}},[t._v("#")]),t._v(" Linux/Mac")]),t._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker run --rm \\\n-v $PWD/input:/opt/ontop/input \\\n-v $PWD/jdbc:/opt/ontop/jdbc \\\n-e ONTOLOGY_FILE=/opt/ontop/input/university-complete.ttl \\\n-e MAPPING_FILE=/opt/ontop/input/university-complete.obda \\\n-e PROPERTIES_FILE=/opt/ontop/input/university-complete.docker.properties \\\n-p 8080:8080 ontop/ontop-endpoint\n")])])]),n("p",[t._v("Now we can open "),n("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/"),n("OutboundLink")],1),t._v(" to test SPARQL queries.")]),t._v(" "),n("h4",{attrs:{id:"windows"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[t._v("#")]),t._v(" Windows")]),t._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("docker run --rm ^\n-v %CD%/input:/opt/ontop/input ^\n-v %CD%/jdbc:/opt/ontop/jdbc ^\n-e ONTOLOGY_FILE=/opt/ontop/input/university-complete.ttl ^\n-e MAPPING_FILE=/opt/ontop/input/university-complete.obda ^\n-e PROPERTIES_FILE=/opt/ontop/input/university-complete.docker.properties ^\n-p 8080:8080 ontop/ontop-endpoint\n")])])]),n("p",[t._v("Now we can open "),n("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8080/"),n("OutboundLink")],1),t._v(" to test a SPARQL query.")]),t._v(" "),n("h3",{attrs:{id:"create-a-dedicated-image"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create-a-dedicated-image"}},[t._v("#")]),t._v(" Create a dedicated image")]),t._v(" "),n("p",[t._v("In case we want to deploy a self-contained image, we can write a complete "),n("a",{attrs:{href:"Dockerfile"}},[n("code",[t._v("Dockerfile")])]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-dockerfile extra-class"},[n("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" ontop/ontop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("endpoint\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /opt/ontop\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.ttl input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.obda input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.docker.properties input/ \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" jdbc/h2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("1.4.196.jar jdbc/\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" java "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cp ./lib/*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("./jdbc/* "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Dlogback.configurationFile=file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("./log/logback.xml \\\n        it.unibz.inf.ontop.cli.Ontop endpoint \\\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ontology=input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.ttl \\\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mapping=input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.obda \\\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("properties=input/university"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("complete.docker.properties \\\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("allowed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("origins=http"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//yasgui.org \\\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("lazy "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if needed")]),t._v("\n")])])]),n("p",[t._v("Then, run the commands to build and run the Docker image:")]),t._v(" "),n("div",{staticClass:"language-console extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("$ docker build -t my-ontop-endpoint .\n$ docker run -it --rm --name my-running-ontop-endpoint -p 8080:8080 my-ontop-endpoint\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);